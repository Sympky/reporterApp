name: Laravel Tests

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

jobs:
  laravel-tests:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: testing
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: mbstring, dom, fileinfo, mysql, sqlite3
        coverage: xdebug

    - uses: actions/checkout@v4

    - name: Copy .env
      run: cp .env.example .env

    - name: Install composer dependencies
      run: composer install --no-scripts --no-interaction --prefer-dist --optimize-autoloader

    - name: Set directory permissions
      run: chmod -R 777 storage bootstrap/cache

    - name: Generate application key
      run: php artisan key:generate
      
    - name: Create Vite build directory and mock manifest
      run: |
        mkdir -p public/build/assets
        echo '{"resources/js/app.tsx":{"file":"assets/app-mock.js","src":"resources/js/app.tsx","isEntry":true,"css":["assets/app-mock.css"]},"resources/js/pages/Dashboard.tsx":{"file":"assets/dashboard-mock.js","src":"resources/js/pages/Dashboard.tsx","isEntry":true}}' > public/build/manifest.json
        echo '// Mock JS file for testing' > public/build/assets/app-mock.js
        echo '/* Mock CSS file for testing */' > public/build/assets/app-mock.css
        echo '// Mock JS file for testing' > public/build/assets/dashboard-mock.js

    - name: Create SQLite database
      run: |
        mkdir -p database
        touch database/database.sqlite
        
    - name: Run migrations and prepare database
      run: php artisan migrate --seed --force
      env:
        DB_CONNECTION: sqlite
        DB_DATABASE: database/database.sqlite
        DB_TRANSACTION_NESTING: false

    - name: Make test runner script executable
      run: chmod +x ./run-tests.sh

    - name: Run unit tests
      run: ./run-tests.sh tests/Unit
      env:
        DB_CONNECTION: sqlite
        DB_DATABASE: ":memory:"
        DB_TRANSACTION_NESTING: false
        VITE_MANIFEST_MOCK: true

    - name: Run feature tests
      run: ./run-tests.sh tests/Feature
      env:
        DB_CONNECTION: sqlite
        DB_DATABASE: ":memory:"
        DB_TRANSACTION_NESTING: false
        VITE_MANIFEST_MOCK: true
        
    - name: Upload test artifacts on failure
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: test-logs
        path: |
          ./storage/logs
          ./phpunit.xml
          ./database/database.sqlite 