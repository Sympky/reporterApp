name: Unit Tests

on:
  push:
    branches: [ main, master, develop ]
    paths:
      - '**.php'
      - 'composer.json'
      - 'composer.lock'
      - 'phpunit.xml'
  pull_request:
    branches: [ main, master, develop ]
    paths:
      - '**.php'
      - 'composer.json'
      - 'composer.lock'
      - 'phpunit.xml'

jobs:
  unit-tests:
    runs-on: ubuntu-latest

    steps:
    - uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: mbstring, dom, fileinfo, sqlite3
        coverage: xdebug

    - uses: actions/checkout@v4

    - name: Get composer cache directory
      id: composer-cache
      run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

    - name: Cache composer dependencies
      uses: actions/cache@v4
      with:
        path: ${{ steps.composer-cache.outputs.dir }}
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: ${{ runner.os }}-composer-

    - name: Copy .env
      run: cp .env.example .env

    - name: Install composer dependencies
      run: composer install --no-scripts --no-interaction --prefer-dist

    - name: Generate application key
      run: php artisan key:generate

    - name: Create Vite build directory and mock manifest
      run: |
        mkdir -p public/build/assets
        echo '{"resources/js/app.tsx":{"file":"assets/app-mock.js","src":"resources/js/app.tsx","isEntry":true,"css":["assets/app-mock.css"]},"resources/js/pages/Dashboard.tsx":{"file":"assets/dashboard-mock.js","src":"resources/js/pages/Dashboard.tsx","isEntry":true}}' > public/build/manifest.json
        echo '// Mock JS file for testing' > public/build/assets/app-mock.js
        echo '/* Mock CSS file for testing */' > public/build/assets/app-mock.css
        echo '// Mock JS file for testing' > public/build/assets/dashboard-mock.js

    - name: Create SQLite database
      run: |
        mkdir -p database
        touch database/database.sqlite

    - name: Set environment variables
      run: |
        echo "DB_CONNECTION=sqlite" >> .env
        echo "DB_DATABASE=$GITHUB_WORKSPACE/database/database.sqlite" >> .env
        echo "DB_TRANSACTION_NESTING=false" >> .env
        echo "VITE_MANIFEST_MOCK=true" >> .env

    - name: Run migrations with seeds
      run: php artisan migrate --seed --force

    - name: Make test runner script executable
      run: chmod +x ./run-tests.sh

    - name: Run unit tests with coverage
      run: XDEBUG_MODE=coverage ./run-tests.sh tests/Unit --coverage-clover=coverage.xml
      env:
        DB_CONNECTION: sqlite
        DB_DATABASE: ":memory:"
        DB_TRANSACTION_NESTING: false
        VITE_MANIFEST_MOCK: true

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        fail_ci_if_error: false

    - name: Create test reports directory
      run: mkdir -p test-reports

    - name: Run JUnit tests
      run: ./run-tests.sh --log-junit test-reports/junit.xml tests/Unit
      env:
        DB_CONNECTION: sqlite
        DB_DATABASE: ":memory:"
        DB_TRANSACTION_NESTING: false
        VITE_MANIFEST_MOCK: true

    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: test-reports

    - name: Upload coverage results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: code-coverage
        path: coverage.xml 