<?php

namespace App\Observers;

use App\Models\Vulnerability;
use Illuminate\Support\Facades\Storage;

class VulnerabilityObserver
{
    /**
     * Handle the Vulnerability "created" event.
     */
    public function created(Vulnerability $vulnerability): void
    {
        // Create storage directory for the vulnerability
        $project = $vulnerability->project;
        $path = 'files/clients/' . $project->client_id . '/projects/' . $project->id . '/vulnerabilities/' . $vulnerability->id;
        Storage::disk('public')->makeDirectory($path);
    }

    /**
     * Handle the Vulnerability "updated" event.
     */
    public function updated(Vulnerability $vulnerability): void
    {
        //
    }

    /**
     * Handle the Vulnerability "deleted" event.
     */
    public function deleted(Vulnerability $vulnerability): void
    {
        // Delete the vulnerability's files from storage
        $vulnerability->files->each(function ($file) {
            Storage::disk('public')->delete($file->path);
        });
        
        // Delete the vulnerability's directory
        $project = $vulnerability->project;
        $path = 'files/clients/' . $project->client_id . '/projects/' . $project->id . '/vulnerabilities/' . $vulnerability->id;
        Storage::disk('public')->deleteDirectory($path);
    }

    /**
     * Handle the Vulnerability "restored" event.
     */
    public function restored(Vulnerability $vulnerability): void
    {
        //
    }

    /**
     * Handle the Vulnerability "force deleted" event.
     */
    public function forceDeleted(Vulnerability $vulnerability): void
    {
        //
    }
}
