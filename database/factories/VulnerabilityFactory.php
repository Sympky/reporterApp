<?php

namespace Database\Factories;

use Illuminate\Database\Eloquent\Factories\Factory;
use Illuminate\Support\Arr;
use App\Models\Project;

/**
 * @extends \Illuminate\Database\Eloquent\Factories\Factory<\App\Models\Vulnerability>
 */
class VulnerabilityFactory extends Factory
{
    /**
     * Define the model's default state.
     *
     * @return array<string, mixed>
     */
    public function definition(): array
    {
        $scoringLevels = ['info', 'low', 'medium', 'high', 'critical'];
        return [
            'name' => $this->faker->sentence(6),
            'description' => $this->faker->text(150),
            'recommendations' => $this->faker->text(150),
            'remediation_steps' => $this->faker->text(150),
            'impact' => $this->faker->text(100),
            'references' => $this->faker->url,
            'affected_resources' => $this->faker->sentence(4),
            'tags' => json_encode($this->faker->words(3)),
            'cve' => $this->faker->unique()->regexify('CVE-\d{4}-\d{4}'),
            'cvss' => $this->faker->randomFloat(1, 0, 10),
            'severity' => Arr::random($scoringLevels),
            'status' => Arr::random(['open', 'fixed', 'in_progress']),
            'likelihood_score' => Arr::random($scoringLevels),
            'remediation_score' => Arr::random($scoringLevels),
            'impact_score' => Arr::random($scoringLevels),
            'is_template' => $this->faker->boolean,
            'project_id' => Project::factory(), 
            'discovered_at' => $this->faker->dateTimeBetween('-1 year', 'now'),
            'evidence' => json_encode(['screenshot' => 'example.jpg', 'details' => $this->faker->sentence(4)]),
            'created_by' => 1, 
            'updated_by' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ];
    }
}
